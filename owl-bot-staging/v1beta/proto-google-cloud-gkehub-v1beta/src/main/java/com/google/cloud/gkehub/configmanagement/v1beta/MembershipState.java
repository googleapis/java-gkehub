// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/gkehub/v1beta/configmanagement/configmanagement.proto

package com.google.cloud.gkehub.configmanagement.v1beta;

/**
 * <pre>
 * **Anthos Config Management**: State for a single cluster.
 * </pre>
 *
 * Protobuf type {@code google.cloud.gkehub.configmanagement.v1beta.MembershipState}
 */
public final class MembershipState extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:google.cloud.gkehub.configmanagement.v1beta.MembershipState)
    MembershipStateOrBuilder {
private static final long serialVersionUID = 0L;
  // Use MembershipState.newBuilder() to construct.
  private MembershipState(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private MembershipState() {
    clusterName_ = "";
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new MembershipState();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private MembershipState(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            java.lang.String s = input.readStringRequireUtf8();

            clusterName_ = s;
            break;
          }
          case 18: {
            com.google.cloud.gkehub.configmanagement.v1beta.MembershipSpec.Builder subBuilder = null;
            if (membershipSpec_ != null) {
              subBuilder = membershipSpec_.toBuilder();
            }
            membershipSpec_ = input.readMessage(com.google.cloud.gkehub.configmanagement.v1beta.MembershipSpec.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(membershipSpec_);
              membershipSpec_ = subBuilder.buildPartial();
            }

            break;
          }
          case 26: {
            com.google.cloud.gkehub.configmanagement.v1beta.OperatorState.Builder subBuilder = null;
            if (operatorState_ != null) {
              subBuilder = operatorState_.toBuilder();
            }
            operatorState_ = input.readMessage(com.google.cloud.gkehub.configmanagement.v1beta.OperatorState.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(operatorState_);
              operatorState_ = subBuilder.buildPartial();
            }

            break;
          }
          case 34: {
            com.google.cloud.gkehub.configmanagement.v1beta.ConfigSyncState.Builder subBuilder = null;
            if (configSyncState_ != null) {
              subBuilder = configSyncState_.toBuilder();
            }
            configSyncState_ = input.readMessage(com.google.cloud.gkehub.configmanagement.v1beta.ConfigSyncState.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(configSyncState_);
              configSyncState_ = subBuilder.buildPartial();
            }

            break;
          }
          case 42: {
            com.google.cloud.gkehub.configmanagement.v1beta.PolicyControllerState.Builder subBuilder = null;
            if (policyControllerState_ != null) {
              subBuilder = policyControllerState_.toBuilder();
            }
            policyControllerState_ = input.readMessage(com.google.cloud.gkehub.configmanagement.v1beta.PolicyControllerState.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(policyControllerState_);
              policyControllerState_ = subBuilder.buildPartial();
            }

            break;
          }
          case 50: {
            com.google.cloud.gkehub.configmanagement.v1beta.BinauthzState.Builder subBuilder = null;
            if (binauthzState_ != null) {
              subBuilder = binauthzState_.toBuilder();
            }
            binauthzState_ = input.readMessage(com.google.cloud.gkehub.configmanagement.v1beta.BinauthzState.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(binauthzState_);
              binauthzState_ = subBuilder.buildPartial();
            }

            break;
          }
          case 58: {
            com.google.cloud.gkehub.configmanagement.v1beta.HierarchyControllerState.Builder subBuilder = null;
            if (hierarchyControllerState_ != null) {
              subBuilder = hierarchyControllerState_.toBuilder();
            }
            hierarchyControllerState_ = input.readMessage(com.google.cloud.gkehub.configmanagement.v1beta.HierarchyControllerState.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(hierarchyControllerState_);
              hierarchyControllerState_ = subBuilder.buildPartial();
            }

            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.google.cloud.gkehub.configmanagement.v1beta.ConfigManagementProto.internal_static_google_cloud_gkehub_configmanagement_v1beta_MembershipState_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.cloud.gkehub.configmanagement.v1beta.ConfigManagementProto.internal_static_google_cloud_gkehub_configmanagement_v1beta_MembershipState_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.cloud.gkehub.configmanagement.v1beta.MembershipState.class, com.google.cloud.gkehub.configmanagement.v1beta.MembershipState.Builder.class);
  }

  public static final int CLUSTER_NAME_FIELD_NUMBER = 1;
  private volatile java.lang.Object clusterName_;
  /**
   * <pre>
   * The user-defined name for the cluster used by ClusterSelectors to group
   * clusters together. This should match Membership's membership_name,
   * unless the user installed ACM on the cluster manually prior to enabling
   * the ACM hub feature.
   * Unique within a Anthos Config Management installation.
   * </pre>
   *
   * <code>string cluster_name = 1;</code>
   * @return The clusterName.
   */
  @java.lang.Override
  public java.lang.String getClusterName() {
    java.lang.Object ref = clusterName_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      clusterName_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * The user-defined name for the cluster used by ClusterSelectors to group
   * clusters together. This should match Membership's membership_name,
   * unless the user installed ACM on the cluster manually prior to enabling
   * the ACM hub feature.
   * Unique within a Anthos Config Management installation.
   * </pre>
   *
   * <code>string cluster_name = 1;</code>
   * @return The bytes for clusterName.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getClusterNameBytes() {
    java.lang.Object ref = clusterName_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      clusterName_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int MEMBERSHIP_SPEC_FIELD_NUMBER = 2;
  private com.google.cloud.gkehub.configmanagement.v1beta.MembershipSpec membershipSpec_;
  /**
   * <pre>
   * Membership configuration in the cluster. This represents the actual state
   * in the cluster, while the MembershipSpec in the FeatureSpec represents
   * the intended state
   * </pre>
   *
   * <code>.google.cloud.gkehub.configmanagement.v1beta.MembershipSpec membership_spec = 2;</code>
   * @return Whether the membershipSpec field is set.
   */
  @java.lang.Override
  public boolean hasMembershipSpec() {
    return membershipSpec_ != null;
  }
  /**
   * <pre>
   * Membership configuration in the cluster. This represents the actual state
   * in the cluster, while the MembershipSpec in the FeatureSpec represents
   * the intended state
   * </pre>
   *
   * <code>.google.cloud.gkehub.configmanagement.v1beta.MembershipSpec membership_spec = 2;</code>
   * @return The membershipSpec.
   */
  @java.lang.Override
  public com.google.cloud.gkehub.configmanagement.v1beta.MembershipSpec getMembershipSpec() {
    return membershipSpec_ == null ? com.google.cloud.gkehub.configmanagement.v1beta.MembershipSpec.getDefaultInstance() : membershipSpec_;
  }
  /**
   * <pre>
   * Membership configuration in the cluster. This represents the actual state
   * in the cluster, while the MembershipSpec in the FeatureSpec represents
   * the intended state
   * </pre>
   *
   * <code>.google.cloud.gkehub.configmanagement.v1beta.MembershipSpec membership_spec = 2;</code>
   */
  @java.lang.Override
  public com.google.cloud.gkehub.configmanagement.v1beta.MembershipSpecOrBuilder getMembershipSpecOrBuilder() {
    return getMembershipSpec();
  }

  public static final int OPERATOR_STATE_FIELD_NUMBER = 3;
  private com.google.cloud.gkehub.configmanagement.v1beta.OperatorState operatorState_;
  /**
   * <pre>
   * Current install status of ACM's Operator
   * </pre>
   *
   * <code>.google.cloud.gkehub.configmanagement.v1beta.OperatorState operator_state = 3;</code>
   * @return Whether the operatorState field is set.
   */
  @java.lang.Override
  public boolean hasOperatorState() {
    return operatorState_ != null;
  }
  /**
   * <pre>
   * Current install status of ACM's Operator
   * </pre>
   *
   * <code>.google.cloud.gkehub.configmanagement.v1beta.OperatorState operator_state = 3;</code>
   * @return The operatorState.
   */
  @java.lang.Override
  public com.google.cloud.gkehub.configmanagement.v1beta.OperatorState getOperatorState() {
    return operatorState_ == null ? com.google.cloud.gkehub.configmanagement.v1beta.OperatorState.getDefaultInstance() : operatorState_;
  }
  /**
   * <pre>
   * Current install status of ACM's Operator
   * </pre>
   *
   * <code>.google.cloud.gkehub.configmanagement.v1beta.OperatorState operator_state = 3;</code>
   */
  @java.lang.Override
  public com.google.cloud.gkehub.configmanagement.v1beta.OperatorStateOrBuilder getOperatorStateOrBuilder() {
    return getOperatorState();
  }

  public static final int CONFIG_SYNC_STATE_FIELD_NUMBER = 4;
  private com.google.cloud.gkehub.configmanagement.v1beta.ConfigSyncState configSyncState_;
  /**
   * <pre>
   * Current sync status
   * </pre>
   *
   * <code>.google.cloud.gkehub.configmanagement.v1beta.ConfigSyncState config_sync_state = 4;</code>
   * @return Whether the configSyncState field is set.
   */
  @java.lang.Override
  public boolean hasConfigSyncState() {
    return configSyncState_ != null;
  }
  /**
   * <pre>
   * Current sync status
   * </pre>
   *
   * <code>.google.cloud.gkehub.configmanagement.v1beta.ConfigSyncState config_sync_state = 4;</code>
   * @return The configSyncState.
   */
  @java.lang.Override
  public com.google.cloud.gkehub.configmanagement.v1beta.ConfigSyncState getConfigSyncState() {
    return configSyncState_ == null ? com.google.cloud.gkehub.configmanagement.v1beta.ConfigSyncState.getDefaultInstance() : configSyncState_;
  }
  /**
   * <pre>
   * Current sync status
   * </pre>
   *
   * <code>.google.cloud.gkehub.configmanagement.v1beta.ConfigSyncState config_sync_state = 4;</code>
   */
  @java.lang.Override
  public com.google.cloud.gkehub.configmanagement.v1beta.ConfigSyncStateOrBuilder getConfigSyncStateOrBuilder() {
    return getConfigSyncState();
  }

  public static final int POLICY_CONTROLLER_STATE_FIELD_NUMBER = 5;
  private com.google.cloud.gkehub.configmanagement.v1beta.PolicyControllerState policyControllerState_;
  /**
   * <pre>
   * PolicyController status
   * </pre>
   *
   * <code>.google.cloud.gkehub.configmanagement.v1beta.PolicyControllerState policy_controller_state = 5;</code>
   * @return Whether the policyControllerState field is set.
   */
  @java.lang.Override
  public boolean hasPolicyControllerState() {
    return policyControllerState_ != null;
  }
  /**
   * <pre>
   * PolicyController status
   * </pre>
   *
   * <code>.google.cloud.gkehub.configmanagement.v1beta.PolicyControllerState policy_controller_state = 5;</code>
   * @return The policyControllerState.
   */
  @java.lang.Override
  public com.google.cloud.gkehub.configmanagement.v1beta.PolicyControllerState getPolicyControllerState() {
    return policyControllerState_ == null ? com.google.cloud.gkehub.configmanagement.v1beta.PolicyControllerState.getDefaultInstance() : policyControllerState_;
  }
  /**
   * <pre>
   * PolicyController status
   * </pre>
   *
   * <code>.google.cloud.gkehub.configmanagement.v1beta.PolicyControllerState policy_controller_state = 5;</code>
   */
  @java.lang.Override
  public com.google.cloud.gkehub.configmanagement.v1beta.PolicyControllerStateOrBuilder getPolicyControllerStateOrBuilder() {
    return getPolicyControllerState();
  }

  public static final int BINAUTHZ_STATE_FIELD_NUMBER = 6;
  private com.google.cloud.gkehub.configmanagement.v1beta.BinauthzState binauthzState_;
  /**
   * <pre>
   * Binauthz status
   * </pre>
   *
   * <code>.google.cloud.gkehub.configmanagement.v1beta.BinauthzState binauthz_state = 6;</code>
   * @return Whether the binauthzState field is set.
   */
  @java.lang.Override
  public boolean hasBinauthzState() {
    return binauthzState_ != null;
  }
  /**
   * <pre>
   * Binauthz status
   * </pre>
   *
   * <code>.google.cloud.gkehub.configmanagement.v1beta.BinauthzState binauthz_state = 6;</code>
   * @return The binauthzState.
   */
  @java.lang.Override
  public com.google.cloud.gkehub.configmanagement.v1beta.BinauthzState getBinauthzState() {
    return binauthzState_ == null ? com.google.cloud.gkehub.configmanagement.v1beta.BinauthzState.getDefaultInstance() : binauthzState_;
  }
  /**
   * <pre>
   * Binauthz status
   * </pre>
   *
   * <code>.google.cloud.gkehub.configmanagement.v1beta.BinauthzState binauthz_state = 6;</code>
   */
  @java.lang.Override
  public com.google.cloud.gkehub.configmanagement.v1beta.BinauthzStateOrBuilder getBinauthzStateOrBuilder() {
    return getBinauthzState();
  }

  public static final int HIERARCHY_CONTROLLER_STATE_FIELD_NUMBER = 7;
  private com.google.cloud.gkehub.configmanagement.v1beta.HierarchyControllerState hierarchyControllerState_;
  /**
   * <pre>
   * Hierarchy Controller status
   * </pre>
   *
   * <code>.google.cloud.gkehub.configmanagement.v1beta.HierarchyControllerState hierarchy_controller_state = 7;</code>
   * @return Whether the hierarchyControllerState field is set.
   */
  @java.lang.Override
  public boolean hasHierarchyControllerState() {
    return hierarchyControllerState_ != null;
  }
  /**
   * <pre>
   * Hierarchy Controller status
   * </pre>
   *
   * <code>.google.cloud.gkehub.configmanagement.v1beta.HierarchyControllerState hierarchy_controller_state = 7;</code>
   * @return The hierarchyControllerState.
   */
  @java.lang.Override
  public com.google.cloud.gkehub.configmanagement.v1beta.HierarchyControllerState getHierarchyControllerState() {
    return hierarchyControllerState_ == null ? com.google.cloud.gkehub.configmanagement.v1beta.HierarchyControllerState.getDefaultInstance() : hierarchyControllerState_;
  }
  /**
   * <pre>
   * Hierarchy Controller status
   * </pre>
   *
   * <code>.google.cloud.gkehub.configmanagement.v1beta.HierarchyControllerState hierarchy_controller_state = 7;</code>
   */
  @java.lang.Override
  public com.google.cloud.gkehub.configmanagement.v1beta.HierarchyControllerStateOrBuilder getHierarchyControllerStateOrBuilder() {
    return getHierarchyControllerState();
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!getClusterNameBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, clusterName_);
    }
    if (membershipSpec_ != null) {
      output.writeMessage(2, getMembershipSpec());
    }
    if (operatorState_ != null) {
      output.writeMessage(3, getOperatorState());
    }
    if (configSyncState_ != null) {
      output.writeMessage(4, getConfigSyncState());
    }
    if (policyControllerState_ != null) {
      output.writeMessage(5, getPolicyControllerState());
    }
    if (binauthzState_ != null) {
      output.writeMessage(6, getBinauthzState());
    }
    if (hierarchyControllerState_ != null) {
      output.writeMessage(7, getHierarchyControllerState());
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!getClusterNameBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, clusterName_);
    }
    if (membershipSpec_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, getMembershipSpec());
    }
    if (operatorState_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, getOperatorState());
    }
    if (configSyncState_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, getConfigSyncState());
    }
    if (policyControllerState_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(5, getPolicyControllerState());
    }
    if (binauthzState_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(6, getBinauthzState());
    }
    if (hierarchyControllerState_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(7, getHierarchyControllerState());
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.google.cloud.gkehub.configmanagement.v1beta.MembershipState)) {
      return super.equals(obj);
    }
    com.google.cloud.gkehub.configmanagement.v1beta.MembershipState other = (com.google.cloud.gkehub.configmanagement.v1beta.MembershipState) obj;

    if (!getClusterName()
        .equals(other.getClusterName())) return false;
    if (hasMembershipSpec() != other.hasMembershipSpec()) return false;
    if (hasMembershipSpec()) {
      if (!getMembershipSpec()
          .equals(other.getMembershipSpec())) return false;
    }
    if (hasOperatorState() != other.hasOperatorState()) return false;
    if (hasOperatorState()) {
      if (!getOperatorState()
          .equals(other.getOperatorState())) return false;
    }
    if (hasConfigSyncState() != other.hasConfigSyncState()) return false;
    if (hasConfigSyncState()) {
      if (!getConfigSyncState()
          .equals(other.getConfigSyncState())) return false;
    }
    if (hasPolicyControllerState() != other.hasPolicyControllerState()) return false;
    if (hasPolicyControllerState()) {
      if (!getPolicyControllerState()
          .equals(other.getPolicyControllerState())) return false;
    }
    if (hasBinauthzState() != other.hasBinauthzState()) return false;
    if (hasBinauthzState()) {
      if (!getBinauthzState()
          .equals(other.getBinauthzState())) return false;
    }
    if (hasHierarchyControllerState() != other.hasHierarchyControllerState()) return false;
    if (hasHierarchyControllerState()) {
      if (!getHierarchyControllerState()
          .equals(other.getHierarchyControllerState())) return false;
    }
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + CLUSTER_NAME_FIELD_NUMBER;
    hash = (53 * hash) + getClusterName().hashCode();
    if (hasMembershipSpec()) {
      hash = (37 * hash) + MEMBERSHIP_SPEC_FIELD_NUMBER;
      hash = (53 * hash) + getMembershipSpec().hashCode();
    }
    if (hasOperatorState()) {
      hash = (37 * hash) + OPERATOR_STATE_FIELD_NUMBER;
      hash = (53 * hash) + getOperatorState().hashCode();
    }
    if (hasConfigSyncState()) {
      hash = (37 * hash) + CONFIG_SYNC_STATE_FIELD_NUMBER;
      hash = (53 * hash) + getConfigSyncState().hashCode();
    }
    if (hasPolicyControllerState()) {
      hash = (37 * hash) + POLICY_CONTROLLER_STATE_FIELD_NUMBER;
      hash = (53 * hash) + getPolicyControllerState().hashCode();
    }
    if (hasBinauthzState()) {
      hash = (37 * hash) + BINAUTHZ_STATE_FIELD_NUMBER;
      hash = (53 * hash) + getBinauthzState().hashCode();
    }
    if (hasHierarchyControllerState()) {
      hash = (37 * hash) + HIERARCHY_CONTROLLER_STATE_FIELD_NUMBER;
      hash = (53 * hash) + getHierarchyControllerState().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.cloud.gkehub.configmanagement.v1beta.MembershipState parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.cloud.gkehub.configmanagement.v1beta.MembershipState parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.cloud.gkehub.configmanagement.v1beta.MembershipState parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.cloud.gkehub.configmanagement.v1beta.MembershipState parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.cloud.gkehub.configmanagement.v1beta.MembershipState parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.cloud.gkehub.configmanagement.v1beta.MembershipState parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.cloud.gkehub.configmanagement.v1beta.MembershipState parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.cloud.gkehub.configmanagement.v1beta.MembershipState parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.cloud.gkehub.configmanagement.v1beta.MembershipState parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.google.cloud.gkehub.configmanagement.v1beta.MembershipState parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.cloud.gkehub.configmanagement.v1beta.MembershipState parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.cloud.gkehub.configmanagement.v1beta.MembershipState parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.google.cloud.gkehub.configmanagement.v1beta.MembershipState prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * **Anthos Config Management**: State for a single cluster.
   * </pre>
   *
   * Protobuf type {@code google.cloud.gkehub.configmanagement.v1beta.MembershipState}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:google.cloud.gkehub.configmanagement.v1beta.MembershipState)
      com.google.cloud.gkehub.configmanagement.v1beta.MembershipStateOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.cloud.gkehub.configmanagement.v1beta.ConfigManagementProto.internal_static_google_cloud_gkehub_configmanagement_v1beta_MembershipState_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.cloud.gkehub.configmanagement.v1beta.ConfigManagementProto.internal_static_google_cloud_gkehub_configmanagement_v1beta_MembershipState_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.cloud.gkehub.configmanagement.v1beta.MembershipState.class, com.google.cloud.gkehub.configmanagement.v1beta.MembershipState.Builder.class);
    }

    // Construct using com.google.cloud.gkehub.configmanagement.v1beta.MembershipState.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      clusterName_ = "";

      if (membershipSpecBuilder_ == null) {
        membershipSpec_ = null;
      } else {
        membershipSpec_ = null;
        membershipSpecBuilder_ = null;
      }
      if (operatorStateBuilder_ == null) {
        operatorState_ = null;
      } else {
        operatorState_ = null;
        operatorStateBuilder_ = null;
      }
      if (configSyncStateBuilder_ == null) {
        configSyncState_ = null;
      } else {
        configSyncState_ = null;
        configSyncStateBuilder_ = null;
      }
      if (policyControllerStateBuilder_ == null) {
        policyControllerState_ = null;
      } else {
        policyControllerState_ = null;
        policyControllerStateBuilder_ = null;
      }
      if (binauthzStateBuilder_ == null) {
        binauthzState_ = null;
      } else {
        binauthzState_ = null;
        binauthzStateBuilder_ = null;
      }
      if (hierarchyControllerStateBuilder_ == null) {
        hierarchyControllerState_ = null;
      } else {
        hierarchyControllerState_ = null;
        hierarchyControllerStateBuilder_ = null;
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.google.cloud.gkehub.configmanagement.v1beta.ConfigManagementProto.internal_static_google_cloud_gkehub_configmanagement_v1beta_MembershipState_descriptor;
    }

    @java.lang.Override
    public com.google.cloud.gkehub.configmanagement.v1beta.MembershipState getDefaultInstanceForType() {
      return com.google.cloud.gkehub.configmanagement.v1beta.MembershipState.getDefaultInstance();
    }

    @java.lang.Override
    public com.google.cloud.gkehub.configmanagement.v1beta.MembershipState build() {
      com.google.cloud.gkehub.configmanagement.v1beta.MembershipState result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.cloud.gkehub.configmanagement.v1beta.MembershipState buildPartial() {
      com.google.cloud.gkehub.configmanagement.v1beta.MembershipState result = new com.google.cloud.gkehub.configmanagement.v1beta.MembershipState(this);
      result.clusterName_ = clusterName_;
      if (membershipSpecBuilder_ == null) {
        result.membershipSpec_ = membershipSpec_;
      } else {
        result.membershipSpec_ = membershipSpecBuilder_.build();
      }
      if (operatorStateBuilder_ == null) {
        result.operatorState_ = operatorState_;
      } else {
        result.operatorState_ = operatorStateBuilder_.build();
      }
      if (configSyncStateBuilder_ == null) {
        result.configSyncState_ = configSyncState_;
      } else {
        result.configSyncState_ = configSyncStateBuilder_.build();
      }
      if (policyControllerStateBuilder_ == null) {
        result.policyControllerState_ = policyControllerState_;
      } else {
        result.policyControllerState_ = policyControllerStateBuilder_.build();
      }
      if (binauthzStateBuilder_ == null) {
        result.binauthzState_ = binauthzState_;
      } else {
        result.binauthzState_ = binauthzStateBuilder_.build();
      }
      if (hierarchyControllerStateBuilder_ == null) {
        result.hierarchyControllerState_ = hierarchyControllerState_;
      } else {
        result.hierarchyControllerState_ = hierarchyControllerStateBuilder_.build();
      }
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.cloud.gkehub.configmanagement.v1beta.MembershipState) {
        return mergeFrom((com.google.cloud.gkehub.configmanagement.v1beta.MembershipState)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.cloud.gkehub.configmanagement.v1beta.MembershipState other) {
      if (other == com.google.cloud.gkehub.configmanagement.v1beta.MembershipState.getDefaultInstance()) return this;
      if (!other.getClusterName().isEmpty()) {
        clusterName_ = other.clusterName_;
        onChanged();
      }
      if (other.hasMembershipSpec()) {
        mergeMembershipSpec(other.getMembershipSpec());
      }
      if (other.hasOperatorState()) {
        mergeOperatorState(other.getOperatorState());
      }
      if (other.hasConfigSyncState()) {
        mergeConfigSyncState(other.getConfigSyncState());
      }
      if (other.hasPolicyControllerState()) {
        mergePolicyControllerState(other.getPolicyControllerState());
      }
      if (other.hasBinauthzState()) {
        mergeBinauthzState(other.getBinauthzState());
      }
      if (other.hasHierarchyControllerState()) {
        mergeHierarchyControllerState(other.getHierarchyControllerState());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.google.cloud.gkehub.configmanagement.v1beta.MembershipState parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.google.cloud.gkehub.configmanagement.v1beta.MembershipState) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private java.lang.Object clusterName_ = "";
    /**
     * <pre>
     * The user-defined name for the cluster used by ClusterSelectors to group
     * clusters together. This should match Membership's membership_name,
     * unless the user installed ACM on the cluster manually prior to enabling
     * the ACM hub feature.
     * Unique within a Anthos Config Management installation.
     * </pre>
     *
     * <code>string cluster_name = 1;</code>
     * @return The clusterName.
     */
    public java.lang.String getClusterName() {
      java.lang.Object ref = clusterName_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        clusterName_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * The user-defined name for the cluster used by ClusterSelectors to group
     * clusters together. This should match Membership's membership_name,
     * unless the user installed ACM on the cluster manually prior to enabling
     * the ACM hub feature.
     * Unique within a Anthos Config Management installation.
     * </pre>
     *
     * <code>string cluster_name = 1;</code>
     * @return The bytes for clusterName.
     */
    public com.google.protobuf.ByteString
        getClusterNameBytes() {
      java.lang.Object ref = clusterName_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        clusterName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * The user-defined name for the cluster used by ClusterSelectors to group
     * clusters together. This should match Membership's membership_name,
     * unless the user installed ACM on the cluster manually prior to enabling
     * the ACM hub feature.
     * Unique within a Anthos Config Management installation.
     * </pre>
     *
     * <code>string cluster_name = 1;</code>
     * @param value The clusterName to set.
     * @return This builder for chaining.
     */
    public Builder setClusterName(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      clusterName_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The user-defined name for the cluster used by ClusterSelectors to group
     * clusters together. This should match Membership's membership_name,
     * unless the user installed ACM on the cluster manually prior to enabling
     * the ACM hub feature.
     * Unique within a Anthos Config Management installation.
     * </pre>
     *
     * <code>string cluster_name = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearClusterName() {
      
      clusterName_ = getDefaultInstance().getClusterName();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The user-defined name for the cluster used by ClusterSelectors to group
     * clusters together. This should match Membership's membership_name,
     * unless the user installed ACM on the cluster manually prior to enabling
     * the ACM hub feature.
     * Unique within a Anthos Config Management installation.
     * </pre>
     *
     * <code>string cluster_name = 1;</code>
     * @param value The bytes for clusterName to set.
     * @return This builder for chaining.
     */
    public Builder setClusterNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      clusterName_ = value;
      onChanged();
      return this;
    }

    private com.google.cloud.gkehub.configmanagement.v1beta.MembershipSpec membershipSpec_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.cloud.gkehub.configmanagement.v1beta.MembershipSpec, com.google.cloud.gkehub.configmanagement.v1beta.MembershipSpec.Builder, com.google.cloud.gkehub.configmanagement.v1beta.MembershipSpecOrBuilder> membershipSpecBuilder_;
    /**
     * <pre>
     * Membership configuration in the cluster. This represents the actual state
     * in the cluster, while the MembershipSpec in the FeatureSpec represents
     * the intended state
     * </pre>
     *
     * <code>.google.cloud.gkehub.configmanagement.v1beta.MembershipSpec membership_spec = 2;</code>
     * @return Whether the membershipSpec field is set.
     */
    public boolean hasMembershipSpec() {
      return membershipSpecBuilder_ != null || membershipSpec_ != null;
    }
    /**
     * <pre>
     * Membership configuration in the cluster. This represents the actual state
     * in the cluster, while the MembershipSpec in the FeatureSpec represents
     * the intended state
     * </pre>
     *
     * <code>.google.cloud.gkehub.configmanagement.v1beta.MembershipSpec membership_spec = 2;</code>
     * @return The membershipSpec.
     */
    public com.google.cloud.gkehub.configmanagement.v1beta.MembershipSpec getMembershipSpec() {
      if (membershipSpecBuilder_ == null) {
        return membershipSpec_ == null ? com.google.cloud.gkehub.configmanagement.v1beta.MembershipSpec.getDefaultInstance() : membershipSpec_;
      } else {
        return membershipSpecBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Membership configuration in the cluster. This represents the actual state
     * in the cluster, while the MembershipSpec in the FeatureSpec represents
     * the intended state
     * </pre>
     *
     * <code>.google.cloud.gkehub.configmanagement.v1beta.MembershipSpec membership_spec = 2;</code>
     */
    public Builder setMembershipSpec(com.google.cloud.gkehub.configmanagement.v1beta.MembershipSpec value) {
      if (membershipSpecBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        membershipSpec_ = value;
        onChanged();
      } else {
        membershipSpecBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * Membership configuration in the cluster. This represents the actual state
     * in the cluster, while the MembershipSpec in the FeatureSpec represents
     * the intended state
     * </pre>
     *
     * <code>.google.cloud.gkehub.configmanagement.v1beta.MembershipSpec membership_spec = 2;</code>
     */
    public Builder setMembershipSpec(
        com.google.cloud.gkehub.configmanagement.v1beta.MembershipSpec.Builder builderForValue) {
      if (membershipSpecBuilder_ == null) {
        membershipSpec_ = builderForValue.build();
        onChanged();
      } else {
        membershipSpecBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * Membership configuration in the cluster. This represents the actual state
     * in the cluster, while the MembershipSpec in the FeatureSpec represents
     * the intended state
     * </pre>
     *
     * <code>.google.cloud.gkehub.configmanagement.v1beta.MembershipSpec membership_spec = 2;</code>
     */
    public Builder mergeMembershipSpec(com.google.cloud.gkehub.configmanagement.v1beta.MembershipSpec value) {
      if (membershipSpecBuilder_ == null) {
        if (membershipSpec_ != null) {
          membershipSpec_ =
            com.google.cloud.gkehub.configmanagement.v1beta.MembershipSpec.newBuilder(membershipSpec_).mergeFrom(value).buildPartial();
        } else {
          membershipSpec_ = value;
        }
        onChanged();
      } else {
        membershipSpecBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * Membership configuration in the cluster. This represents the actual state
     * in the cluster, while the MembershipSpec in the FeatureSpec represents
     * the intended state
     * </pre>
     *
     * <code>.google.cloud.gkehub.configmanagement.v1beta.MembershipSpec membership_spec = 2;</code>
     */
    public Builder clearMembershipSpec() {
      if (membershipSpecBuilder_ == null) {
        membershipSpec_ = null;
        onChanged();
      } else {
        membershipSpec_ = null;
        membershipSpecBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * Membership configuration in the cluster. This represents the actual state
     * in the cluster, while the MembershipSpec in the FeatureSpec represents
     * the intended state
     * </pre>
     *
     * <code>.google.cloud.gkehub.configmanagement.v1beta.MembershipSpec membership_spec = 2;</code>
     */
    public com.google.cloud.gkehub.configmanagement.v1beta.MembershipSpec.Builder getMembershipSpecBuilder() {
      
      onChanged();
      return getMembershipSpecFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Membership configuration in the cluster. This represents the actual state
     * in the cluster, while the MembershipSpec in the FeatureSpec represents
     * the intended state
     * </pre>
     *
     * <code>.google.cloud.gkehub.configmanagement.v1beta.MembershipSpec membership_spec = 2;</code>
     */
    public com.google.cloud.gkehub.configmanagement.v1beta.MembershipSpecOrBuilder getMembershipSpecOrBuilder() {
      if (membershipSpecBuilder_ != null) {
        return membershipSpecBuilder_.getMessageOrBuilder();
      } else {
        return membershipSpec_ == null ?
            com.google.cloud.gkehub.configmanagement.v1beta.MembershipSpec.getDefaultInstance() : membershipSpec_;
      }
    }
    /**
     * <pre>
     * Membership configuration in the cluster. This represents the actual state
     * in the cluster, while the MembershipSpec in the FeatureSpec represents
     * the intended state
     * </pre>
     *
     * <code>.google.cloud.gkehub.configmanagement.v1beta.MembershipSpec membership_spec = 2;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.cloud.gkehub.configmanagement.v1beta.MembershipSpec, com.google.cloud.gkehub.configmanagement.v1beta.MembershipSpec.Builder, com.google.cloud.gkehub.configmanagement.v1beta.MembershipSpecOrBuilder> 
        getMembershipSpecFieldBuilder() {
      if (membershipSpecBuilder_ == null) {
        membershipSpecBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.cloud.gkehub.configmanagement.v1beta.MembershipSpec, com.google.cloud.gkehub.configmanagement.v1beta.MembershipSpec.Builder, com.google.cloud.gkehub.configmanagement.v1beta.MembershipSpecOrBuilder>(
                getMembershipSpec(),
                getParentForChildren(),
                isClean());
        membershipSpec_ = null;
      }
      return membershipSpecBuilder_;
    }

    private com.google.cloud.gkehub.configmanagement.v1beta.OperatorState operatorState_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.cloud.gkehub.configmanagement.v1beta.OperatorState, com.google.cloud.gkehub.configmanagement.v1beta.OperatorState.Builder, com.google.cloud.gkehub.configmanagement.v1beta.OperatorStateOrBuilder> operatorStateBuilder_;
    /**
     * <pre>
     * Current install status of ACM's Operator
     * </pre>
     *
     * <code>.google.cloud.gkehub.configmanagement.v1beta.OperatorState operator_state = 3;</code>
     * @return Whether the operatorState field is set.
     */
    public boolean hasOperatorState() {
      return operatorStateBuilder_ != null || operatorState_ != null;
    }
    /**
     * <pre>
     * Current install status of ACM's Operator
     * </pre>
     *
     * <code>.google.cloud.gkehub.configmanagement.v1beta.OperatorState operator_state = 3;</code>
     * @return The operatorState.
     */
    public com.google.cloud.gkehub.configmanagement.v1beta.OperatorState getOperatorState() {
      if (operatorStateBuilder_ == null) {
        return operatorState_ == null ? com.google.cloud.gkehub.configmanagement.v1beta.OperatorState.getDefaultInstance() : operatorState_;
      } else {
        return operatorStateBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Current install status of ACM's Operator
     * </pre>
     *
     * <code>.google.cloud.gkehub.configmanagement.v1beta.OperatorState operator_state = 3;</code>
     */
    public Builder setOperatorState(com.google.cloud.gkehub.configmanagement.v1beta.OperatorState value) {
      if (operatorStateBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        operatorState_ = value;
        onChanged();
      } else {
        operatorStateBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * Current install status of ACM's Operator
     * </pre>
     *
     * <code>.google.cloud.gkehub.configmanagement.v1beta.OperatorState operator_state = 3;</code>
     */
    public Builder setOperatorState(
        com.google.cloud.gkehub.configmanagement.v1beta.OperatorState.Builder builderForValue) {
      if (operatorStateBuilder_ == null) {
        operatorState_ = builderForValue.build();
        onChanged();
      } else {
        operatorStateBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * Current install status of ACM's Operator
     * </pre>
     *
     * <code>.google.cloud.gkehub.configmanagement.v1beta.OperatorState operator_state = 3;</code>
     */
    public Builder mergeOperatorState(com.google.cloud.gkehub.configmanagement.v1beta.OperatorState value) {
      if (operatorStateBuilder_ == null) {
        if (operatorState_ != null) {
          operatorState_ =
            com.google.cloud.gkehub.configmanagement.v1beta.OperatorState.newBuilder(operatorState_).mergeFrom(value).buildPartial();
        } else {
          operatorState_ = value;
        }
        onChanged();
      } else {
        operatorStateBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * Current install status of ACM's Operator
     * </pre>
     *
     * <code>.google.cloud.gkehub.configmanagement.v1beta.OperatorState operator_state = 3;</code>
     */
    public Builder clearOperatorState() {
      if (operatorStateBuilder_ == null) {
        operatorState_ = null;
        onChanged();
      } else {
        operatorState_ = null;
        operatorStateBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * Current install status of ACM's Operator
     * </pre>
     *
     * <code>.google.cloud.gkehub.configmanagement.v1beta.OperatorState operator_state = 3;</code>
     */
    public com.google.cloud.gkehub.configmanagement.v1beta.OperatorState.Builder getOperatorStateBuilder() {
      
      onChanged();
      return getOperatorStateFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Current install status of ACM's Operator
     * </pre>
     *
     * <code>.google.cloud.gkehub.configmanagement.v1beta.OperatorState operator_state = 3;</code>
     */
    public com.google.cloud.gkehub.configmanagement.v1beta.OperatorStateOrBuilder getOperatorStateOrBuilder() {
      if (operatorStateBuilder_ != null) {
        return operatorStateBuilder_.getMessageOrBuilder();
      } else {
        return operatorState_ == null ?
            com.google.cloud.gkehub.configmanagement.v1beta.OperatorState.getDefaultInstance() : operatorState_;
      }
    }
    /**
     * <pre>
     * Current install status of ACM's Operator
     * </pre>
     *
     * <code>.google.cloud.gkehub.configmanagement.v1beta.OperatorState operator_state = 3;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.cloud.gkehub.configmanagement.v1beta.OperatorState, com.google.cloud.gkehub.configmanagement.v1beta.OperatorState.Builder, com.google.cloud.gkehub.configmanagement.v1beta.OperatorStateOrBuilder> 
        getOperatorStateFieldBuilder() {
      if (operatorStateBuilder_ == null) {
        operatorStateBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.cloud.gkehub.configmanagement.v1beta.OperatorState, com.google.cloud.gkehub.configmanagement.v1beta.OperatorState.Builder, com.google.cloud.gkehub.configmanagement.v1beta.OperatorStateOrBuilder>(
                getOperatorState(),
                getParentForChildren(),
                isClean());
        operatorState_ = null;
      }
      return operatorStateBuilder_;
    }

    private com.google.cloud.gkehub.configmanagement.v1beta.ConfigSyncState configSyncState_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.cloud.gkehub.configmanagement.v1beta.ConfigSyncState, com.google.cloud.gkehub.configmanagement.v1beta.ConfigSyncState.Builder, com.google.cloud.gkehub.configmanagement.v1beta.ConfigSyncStateOrBuilder> configSyncStateBuilder_;
    /**
     * <pre>
     * Current sync status
     * </pre>
     *
     * <code>.google.cloud.gkehub.configmanagement.v1beta.ConfigSyncState config_sync_state = 4;</code>
     * @return Whether the configSyncState field is set.
     */
    public boolean hasConfigSyncState() {
      return configSyncStateBuilder_ != null || configSyncState_ != null;
    }
    /**
     * <pre>
     * Current sync status
     * </pre>
     *
     * <code>.google.cloud.gkehub.configmanagement.v1beta.ConfigSyncState config_sync_state = 4;</code>
     * @return The configSyncState.
     */
    public com.google.cloud.gkehub.configmanagement.v1beta.ConfigSyncState getConfigSyncState() {
      if (configSyncStateBuilder_ == null) {
        return configSyncState_ == null ? com.google.cloud.gkehub.configmanagement.v1beta.ConfigSyncState.getDefaultInstance() : configSyncState_;
      } else {
        return configSyncStateBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Current sync status
     * </pre>
     *
     * <code>.google.cloud.gkehub.configmanagement.v1beta.ConfigSyncState config_sync_state = 4;</code>
     */
    public Builder setConfigSyncState(com.google.cloud.gkehub.configmanagement.v1beta.ConfigSyncState value) {
      if (configSyncStateBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        configSyncState_ = value;
        onChanged();
      } else {
        configSyncStateBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * Current sync status
     * </pre>
     *
     * <code>.google.cloud.gkehub.configmanagement.v1beta.ConfigSyncState config_sync_state = 4;</code>
     */
    public Builder setConfigSyncState(
        com.google.cloud.gkehub.configmanagement.v1beta.ConfigSyncState.Builder builderForValue) {
      if (configSyncStateBuilder_ == null) {
        configSyncState_ = builderForValue.build();
        onChanged();
      } else {
        configSyncStateBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * Current sync status
     * </pre>
     *
     * <code>.google.cloud.gkehub.configmanagement.v1beta.ConfigSyncState config_sync_state = 4;</code>
     */
    public Builder mergeConfigSyncState(com.google.cloud.gkehub.configmanagement.v1beta.ConfigSyncState value) {
      if (configSyncStateBuilder_ == null) {
        if (configSyncState_ != null) {
          configSyncState_ =
            com.google.cloud.gkehub.configmanagement.v1beta.ConfigSyncState.newBuilder(configSyncState_).mergeFrom(value).buildPartial();
        } else {
          configSyncState_ = value;
        }
        onChanged();
      } else {
        configSyncStateBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * Current sync status
     * </pre>
     *
     * <code>.google.cloud.gkehub.configmanagement.v1beta.ConfigSyncState config_sync_state = 4;</code>
     */
    public Builder clearConfigSyncState() {
      if (configSyncStateBuilder_ == null) {
        configSyncState_ = null;
        onChanged();
      } else {
        configSyncState_ = null;
        configSyncStateBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * Current sync status
     * </pre>
     *
     * <code>.google.cloud.gkehub.configmanagement.v1beta.ConfigSyncState config_sync_state = 4;</code>
     */
    public com.google.cloud.gkehub.configmanagement.v1beta.ConfigSyncState.Builder getConfigSyncStateBuilder() {
      
      onChanged();
      return getConfigSyncStateFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Current sync status
     * </pre>
     *
     * <code>.google.cloud.gkehub.configmanagement.v1beta.ConfigSyncState config_sync_state = 4;</code>
     */
    public com.google.cloud.gkehub.configmanagement.v1beta.ConfigSyncStateOrBuilder getConfigSyncStateOrBuilder() {
      if (configSyncStateBuilder_ != null) {
        return configSyncStateBuilder_.getMessageOrBuilder();
      } else {
        return configSyncState_ == null ?
            com.google.cloud.gkehub.configmanagement.v1beta.ConfigSyncState.getDefaultInstance() : configSyncState_;
      }
    }
    /**
     * <pre>
     * Current sync status
     * </pre>
     *
     * <code>.google.cloud.gkehub.configmanagement.v1beta.ConfigSyncState config_sync_state = 4;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.cloud.gkehub.configmanagement.v1beta.ConfigSyncState, com.google.cloud.gkehub.configmanagement.v1beta.ConfigSyncState.Builder, com.google.cloud.gkehub.configmanagement.v1beta.ConfigSyncStateOrBuilder> 
        getConfigSyncStateFieldBuilder() {
      if (configSyncStateBuilder_ == null) {
        configSyncStateBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.cloud.gkehub.configmanagement.v1beta.ConfigSyncState, com.google.cloud.gkehub.configmanagement.v1beta.ConfigSyncState.Builder, com.google.cloud.gkehub.configmanagement.v1beta.ConfigSyncStateOrBuilder>(
                getConfigSyncState(),
                getParentForChildren(),
                isClean());
        configSyncState_ = null;
      }
      return configSyncStateBuilder_;
    }

    private com.google.cloud.gkehub.configmanagement.v1beta.PolicyControllerState policyControllerState_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.cloud.gkehub.configmanagement.v1beta.PolicyControllerState, com.google.cloud.gkehub.configmanagement.v1beta.PolicyControllerState.Builder, com.google.cloud.gkehub.configmanagement.v1beta.PolicyControllerStateOrBuilder> policyControllerStateBuilder_;
    /**
     * <pre>
     * PolicyController status
     * </pre>
     *
     * <code>.google.cloud.gkehub.configmanagement.v1beta.PolicyControllerState policy_controller_state = 5;</code>
     * @return Whether the policyControllerState field is set.
     */
    public boolean hasPolicyControllerState() {
      return policyControllerStateBuilder_ != null || policyControllerState_ != null;
    }
    /**
     * <pre>
     * PolicyController status
     * </pre>
     *
     * <code>.google.cloud.gkehub.configmanagement.v1beta.PolicyControllerState policy_controller_state = 5;</code>
     * @return The policyControllerState.
     */
    public com.google.cloud.gkehub.configmanagement.v1beta.PolicyControllerState getPolicyControllerState() {
      if (policyControllerStateBuilder_ == null) {
        return policyControllerState_ == null ? com.google.cloud.gkehub.configmanagement.v1beta.PolicyControllerState.getDefaultInstance() : policyControllerState_;
      } else {
        return policyControllerStateBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * PolicyController status
     * </pre>
     *
     * <code>.google.cloud.gkehub.configmanagement.v1beta.PolicyControllerState policy_controller_state = 5;</code>
     */
    public Builder setPolicyControllerState(com.google.cloud.gkehub.configmanagement.v1beta.PolicyControllerState value) {
      if (policyControllerStateBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        policyControllerState_ = value;
        onChanged();
      } else {
        policyControllerStateBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * PolicyController status
     * </pre>
     *
     * <code>.google.cloud.gkehub.configmanagement.v1beta.PolicyControllerState policy_controller_state = 5;</code>
     */
    public Builder setPolicyControllerState(
        com.google.cloud.gkehub.configmanagement.v1beta.PolicyControllerState.Builder builderForValue) {
      if (policyControllerStateBuilder_ == null) {
        policyControllerState_ = builderForValue.build();
        onChanged();
      } else {
        policyControllerStateBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * PolicyController status
     * </pre>
     *
     * <code>.google.cloud.gkehub.configmanagement.v1beta.PolicyControllerState policy_controller_state = 5;</code>
     */
    public Builder mergePolicyControllerState(com.google.cloud.gkehub.configmanagement.v1beta.PolicyControllerState value) {
      if (policyControllerStateBuilder_ == null) {
        if (policyControllerState_ != null) {
          policyControllerState_ =
            com.google.cloud.gkehub.configmanagement.v1beta.PolicyControllerState.newBuilder(policyControllerState_).mergeFrom(value).buildPartial();
        } else {
          policyControllerState_ = value;
        }
        onChanged();
      } else {
        policyControllerStateBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * PolicyController status
     * </pre>
     *
     * <code>.google.cloud.gkehub.configmanagement.v1beta.PolicyControllerState policy_controller_state = 5;</code>
     */
    public Builder clearPolicyControllerState() {
      if (policyControllerStateBuilder_ == null) {
        policyControllerState_ = null;
        onChanged();
      } else {
        policyControllerState_ = null;
        policyControllerStateBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * PolicyController status
     * </pre>
     *
     * <code>.google.cloud.gkehub.configmanagement.v1beta.PolicyControllerState policy_controller_state = 5;</code>
     */
    public com.google.cloud.gkehub.configmanagement.v1beta.PolicyControllerState.Builder getPolicyControllerStateBuilder() {
      
      onChanged();
      return getPolicyControllerStateFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * PolicyController status
     * </pre>
     *
     * <code>.google.cloud.gkehub.configmanagement.v1beta.PolicyControllerState policy_controller_state = 5;</code>
     */
    public com.google.cloud.gkehub.configmanagement.v1beta.PolicyControllerStateOrBuilder getPolicyControllerStateOrBuilder() {
      if (policyControllerStateBuilder_ != null) {
        return policyControllerStateBuilder_.getMessageOrBuilder();
      } else {
        return policyControllerState_ == null ?
            com.google.cloud.gkehub.configmanagement.v1beta.PolicyControllerState.getDefaultInstance() : policyControllerState_;
      }
    }
    /**
     * <pre>
     * PolicyController status
     * </pre>
     *
     * <code>.google.cloud.gkehub.configmanagement.v1beta.PolicyControllerState policy_controller_state = 5;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.cloud.gkehub.configmanagement.v1beta.PolicyControllerState, com.google.cloud.gkehub.configmanagement.v1beta.PolicyControllerState.Builder, com.google.cloud.gkehub.configmanagement.v1beta.PolicyControllerStateOrBuilder> 
        getPolicyControllerStateFieldBuilder() {
      if (policyControllerStateBuilder_ == null) {
        policyControllerStateBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.cloud.gkehub.configmanagement.v1beta.PolicyControllerState, com.google.cloud.gkehub.configmanagement.v1beta.PolicyControllerState.Builder, com.google.cloud.gkehub.configmanagement.v1beta.PolicyControllerStateOrBuilder>(
                getPolicyControllerState(),
                getParentForChildren(),
                isClean());
        policyControllerState_ = null;
      }
      return policyControllerStateBuilder_;
    }

    private com.google.cloud.gkehub.configmanagement.v1beta.BinauthzState binauthzState_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.cloud.gkehub.configmanagement.v1beta.BinauthzState, com.google.cloud.gkehub.configmanagement.v1beta.BinauthzState.Builder, com.google.cloud.gkehub.configmanagement.v1beta.BinauthzStateOrBuilder> binauthzStateBuilder_;
    /**
     * <pre>
     * Binauthz status
     * </pre>
     *
     * <code>.google.cloud.gkehub.configmanagement.v1beta.BinauthzState binauthz_state = 6;</code>
     * @return Whether the binauthzState field is set.
     */
    public boolean hasBinauthzState() {
      return binauthzStateBuilder_ != null || binauthzState_ != null;
    }
    /**
     * <pre>
     * Binauthz status
     * </pre>
     *
     * <code>.google.cloud.gkehub.configmanagement.v1beta.BinauthzState binauthz_state = 6;</code>
     * @return The binauthzState.
     */
    public com.google.cloud.gkehub.configmanagement.v1beta.BinauthzState getBinauthzState() {
      if (binauthzStateBuilder_ == null) {
        return binauthzState_ == null ? com.google.cloud.gkehub.configmanagement.v1beta.BinauthzState.getDefaultInstance() : binauthzState_;
      } else {
        return binauthzStateBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Binauthz status
     * </pre>
     *
     * <code>.google.cloud.gkehub.configmanagement.v1beta.BinauthzState binauthz_state = 6;</code>
     */
    public Builder setBinauthzState(com.google.cloud.gkehub.configmanagement.v1beta.BinauthzState value) {
      if (binauthzStateBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        binauthzState_ = value;
        onChanged();
      } else {
        binauthzStateBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * Binauthz status
     * </pre>
     *
     * <code>.google.cloud.gkehub.configmanagement.v1beta.BinauthzState binauthz_state = 6;</code>
     */
    public Builder setBinauthzState(
        com.google.cloud.gkehub.configmanagement.v1beta.BinauthzState.Builder builderForValue) {
      if (binauthzStateBuilder_ == null) {
        binauthzState_ = builderForValue.build();
        onChanged();
      } else {
        binauthzStateBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * Binauthz status
     * </pre>
     *
     * <code>.google.cloud.gkehub.configmanagement.v1beta.BinauthzState binauthz_state = 6;</code>
     */
    public Builder mergeBinauthzState(com.google.cloud.gkehub.configmanagement.v1beta.BinauthzState value) {
      if (binauthzStateBuilder_ == null) {
        if (binauthzState_ != null) {
          binauthzState_ =
            com.google.cloud.gkehub.configmanagement.v1beta.BinauthzState.newBuilder(binauthzState_).mergeFrom(value).buildPartial();
        } else {
          binauthzState_ = value;
        }
        onChanged();
      } else {
        binauthzStateBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * Binauthz status
     * </pre>
     *
     * <code>.google.cloud.gkehub.configmanagement.v1beta.BinauthzState binauthz_state = 6;</code>
     */
    public Builder clearBinauthzState() {
      if (binauthzStateBuilder_ == null) {
        binauthzState_ = null;
        onChanged();
      } else {
        binauthzState_ = null;
        binauthzStateBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * Binauthz status
     * </pre>
     *
     * <code>.google.cloud.gkehub.configmanagement.v1beta.BinauthzState binauthz_state = 6;</code>
     */
    public com.google.cloud.gkehub.configmanagement.v1beta.BinauthzState.Builder getBinauthzStateBuilder() {
      
      onChanged();
      return getBinauthzStateFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Binauthz status
     * </pre>
     *
     * <code>.google.cloud.gkehub.configmanagement.v1beta.BinauthzState binauthz_state = 6;</code>
     */
    public com.google.cloud.gkehub.configmanagement.v1beta.BinauthzStateOrBuilder getBinauthzStateOrBuilder() {
      if (binauthzStateBuilder_ != null) {
        return binauthzStateBuilder_.getMessageOrBuilder();
      } else {
        return binauthzState_ == null ?
            com.google.cloud.gkehub.configmanagement.v1beta.BinauthzState.getDefaultInstance() : binauthzState_;
      }
    }
    /**
     * <pre>
     * Binauthz status
     * </pre>
     *
     * <code>.google.cloud.gkehub.configmanagement.v1beta.BinauthzState binauthz_state = 6;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.cloud.gkehub.configmanagement.v1beta.BinauthzState, com.google.cloud.gkehub.configmanagement.v1beta.BinauthzState.Builder, com.google.cloud.gkehub.configmanagement.v1beta.BinauthzStateOrBuilder> 
        getBinauthzStateFieldBuilder() {
      if (binauthzStateBuilder_ == null) {
        binauthzStateBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.cloud.gkehub.configmanagement.v1beta.BinauthzState, com.google.cloud.gkehub.configmanagement.v1beta.BinauthzState.Builder, com.google.cloud.gkehub.configmanagement.v1beta.BinauthzStateOrBuilder>(
                getBinauthzState(),
                getParentForChildren(),
                isClean());
        binauthzState_ = null;
      }
      return binauthzStateBuilder_;
    }

    private com.google.cloud.gkehub.configmanagement.v1beta.HierarchyControllerState hierarchyControllerState_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.cloud.gkehub.configmanagement.v1beta.HierarchyControllerState, com.google.cloud.gkehub.configmanagement.v1beta.HierarchyControllerState.Builder, com.google.cloud.gkehub.configmanagement.v1beta.HierarchyControllerStateOrBuilder> hierarchyControllerStateBuilder_;
    /**
     * <pre>
     * Hierarchy Controller status
     * </pre>
     *
     * <code>.google.cloud.gkehub.configmanagement.v1beta.HierarchyControllerState hierarchy_controller_state = 7;</code>
     * @return Whether the hierarchyControllerState field is set.
     */
    public boolean hasHierarchyControllerState() {
      return hierarchyControllerStateBuilder_ != null || hierarchyControllerState_ != null;
    }
    /**
     * <pre>
     * Hierarchy Controller status
     * </pre>
     *
     * <code>.google.cloud.gkehub.configmanagement.v1beta.HierarchyControllerState hierarchy_controller_state = 7;</code>
     * @return The hierarchyControllerState.
     */
    public com.google.cloud.gkehub.configmanagement.v1beta.HierarchyControllerState getHierarchyControllerState() {
      if (hierarchyControllerStateBuilder_ == null) {
        return hierarchyControllerState_ == null ? com.google.cloud.gkehub.configmanagement.v1beta.HierarchyControllerState.getDefaultInstance() : hierarchyControllerState_;
      } else {
        return hierarchyControllerStateBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Hierarchy Controller status
     * </pre>
     *
     * <code>.google.cloud.gkehub.configmanagement.v1beta.HierarchyControllerState hierarchy_controller_state = 7;</code>
     */
    public Builder setHierarchyControllerState(com.google.cloud.gkehub.configmanagement.v1beta.HierarchyControllerState value) {
      if (hierarchyControllerStateBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        hierarchyControllerState_ = value;
        onChanged();
      } else {
        hierarchyControllerStateBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * Hierarchy Controller status
     * </pre>
     *
     * <code>.google.cloud.gkehub.configmanagement.v1beta.HierarchyControllerState hierarchy_controller_state = 7;</code>
     */
    public Builder setHierarchyControllerState(
        com.google.cloud.gkehub.configmanagement.v1beta.HierarchyControllerState.Builder builderForValue) {
      if (hierarchyControllerStateBuilder_ == null) {
        hierarchyControllerState_ = builderForValue.build();
        onChanged();
      } else {
        hierarchyControllerStateBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * Hierarchy Controller status
     * </pre>
     *
     * <code>.google.cloud.gkehub.configmanagement.v1beta.HierarchyControllerState hierarchy_controller_state = 7;</code>
     */
    public Builder mergeHierarchyControllerState(com.google.cloud.gkehub.configmanagement.v1beta.HierarchyControllerState value) {
      if (hierarchyControllerStateBuilder_ == null) {
        if (hierarchyControllerState_ != null) {
          hierarchyControllerState_ =
            com.google.cloud.gkehub.configmanagement.v1beta.HierarchyControllerState.newBuilder(hierarchyControllerState_).mergeFrom(value).buildPartial();
        } else {
          hierarchyControllerState_ = value;
        }
        onChanged();
      } else {
        hierarchyControllerStateBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * Hierarchy Controller status
     * </pre>
     *
     * <code>.google.cloud.gkehub.configmanagement.v1beta.HierarchyControllerState hierarchy_controller_state = 7;</code>
     */
    public Builder clearHierarchyControllerState() {
      if (hierarchyControllerStateBuilder_ == null) {
        hierarchyControllerState_ = null;
        onChanged();
      } else {
        hierarchyControllerState_ = null;
        hierarchyControllerStateBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * Hierarchy Controller status
     * </pre>
     *
     * <code>.google.cloud.gkehub.configmanagement.v1beta.HierarchyControllerState hierarchy_controller_state = 7;</code>
     */
    public com.google.cloud.gkehub.configmanagement.v1beta.HierarchyControllerState.Builder getHierarchyControllerStateBuilder() {
      
      onChanged();
      return getHierarchyControllerStateFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Hierarchy Controller status
     * </pre>
     *
     * <code>.google.cloud.gkehub.configmanagement.v1beta.HierarchyControllerState hierarchy_controller_state = 7;</code>
     */
    public com.google.cloud.gkehub.configmanagement.v1beta.HierarchyControllerStateOrBuilder getHierarchyControllerStateOrBuilder() {
      if (hierarchyControllerStateBuilder_ != null) {
        return hierarchyControllerStateBuilder_.getMessageOrBuilder();
      } else {
        return hierarchyControllerState_ == null ?
            com.google.cloud.gkehub.configmanagement.v1beta.HierarchyControllerState.getDefaultInstance() : hierarchyControllerState_;
      }
    }
    /**
     * <pre>
     * Hierarchy Controller status
     * </pre>
     *
     * <code>.google.cloud.gkehub.configmanagement.v1beta.HierarchyControllerState hierarchy_controller_state = 7;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.cloud.gkehub.configmanagement.v1beta.HierarchyControllerState, com.google.cloud.gkehub.configmanagement.v1beta.HierarchyControllerState.Builder, com.google.cloud.gkehub.configmanagement.v1beta.HierarchyControllerStateOrBuilder> 
        getHierarchyControllerStateFieldBuilder() {
      if (hierarchyControllerStateBuilder_ == null) {
        hierarchyControllerStateBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.cloud.gkehub.configmanagement.v1beta.HierarchyControllerState, com.google.cloud.gkehub.configmanagement.v1beta.HierarchyControllerState.Builder, com.google.cloud.gkehub.configmanagement.v1beta.HierarchyControllerStateOrBuilder>(
                getHierarchyControllerState(),
                getParentForChildren(),
                isClean());
        hierarchyControllerState_ = null;
      }
      return hierarchyControllerStateBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:google.cloud.gkehub.configmanagement.v1beta.MembershipState)
  }

  // @@protoc_insertion_point(class_scope:google.cloud.gkehub.configmanagement.v1beta.MembershipState)
  private static final com.google.cloud.gkehub.configmanagement.v1beta.MembershipState DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.google.cloud.gkehub.configmanagement.v1beta.MembershipState();
  }

  public static com.google.cloud.gkehub.configmanagement.v1beta.MembershipState getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<MembershipState>
      PARSER = new com.google.protobuf.AbstractParser<MembershipState>() {
    @java.lang.Override
    public MembershipState parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new MembershipState(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<MembershipState> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<MembershipState> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.cloud.gkehub.configmanagement.v1beta.MembershipState getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

